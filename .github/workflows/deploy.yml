name: Deploy Tushirikiane

on:
  push:
    branches:
      - main

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (Backend)
        uses: actions/checkout@v3

      - name: Install backend dependencies
        run: |
          cd backend
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run backend tests
        run: |
          cd backend
          source venv/bin/activate
          python manage.py test

  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (Frontend Test)
        uses: actions/checkout@v3

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Run frontend build (as test)
        run: |
          cd frontend
          npm run build

  build-frontend:
    runs-on: ubuntu-latest
    needs: frontend-test
    steps:
      - name: Checkout repository (Build Frontend)
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Cache Next.js build files
        uses: actions/cache@v3
        id: nextjs-cache
        with:
          path: |
            frontend/.next/cache
            frontend/node_modules/.cache/next
          key: nextjs-cache-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            nextjs-cache-${{ runner.os }}-

      - name: Install Frontend Dependencies (Build)
        run: |
          cd frontend
          npm install

      - name: Build Next.js Frontend
        run: |
          set -e
          cd frontend
          npm run build
        env:
          NEXT_PUBLIC_BASE_API_URL: ${{ secrets.NEXT_PUBLIC_BASE_API_URL }}
          NEXT_PUBLIC_SOCKET_URL: ${{ secrets.NEXT_PUBLIC_SOCKET_URL }}

      - name: Create TAR.GZ Archive of .next
        run: |
          tar -czvf next-build.tar.gz -C frontend .next

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: next-build.tar.gz
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs:
      - backend-test
      - build-frontend
    if: success()
    steps:
      - name: Checkout repository (Deploy)
        uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: .

      - name: Transfer Archive to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: next-build.tar.gz
          target: /home/ubuntu/projects/tushirikiane/frontend/
          strip_components: 0

      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "ðŸš€ Navigating to /home/ubuntu/projects/tushirikiane/frontend/"
            cd /home/ubuntu/projects/tushirikiane/frontend/
            tar -xzvf next-build.tar.gz
            echo "ðŸš€ Running deploy script..."
            /home/ubuntu/projects/tushirikiane/deploy.sh
